{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Jorhe\\\\Documents\\\\IMPORTANTE\\\\rick_and_morty\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from \"react\";\nimport { useLocation, useNavigate, Navigate, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport './App.css';\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/Nav/Nav';\nimport About from './components/About/About';\nimport Detail from './components/Detail/Detail';\nimport Form from './components/Form/Form';\nimport Error404 from './components/Error404/Error404';\nimport Favorites from './components/Favorites/Favorites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const location = useLocation();\n  const showNav = location.pathname !== '/';\n  const navigate = useNavigate();\n  const [access, setAccess] = useState(false);\n\n  // function login(userData) {\n  //    if (userData.password === PASSWORD && userData.email === EMAIL) {\n  //       setAccess(true);\n  //       navigate('/home');\n  //    }\n  // }\n\n  const login = userData => {\n    const {\n      email,\n      password\n    } = userData;\n    const URL = 'http://localhost:3001/rickandmorty/login/';\n    axios(URL + `?email=${email}&password=${password}`).then(_ref => {\n      let {\n        data\n      } = _ref;\n      const {\n        access\n      } = data;\n      setAccess(data);\n      access && navigate('/home');\n    });\n  };\n  function logout() {\n    setAccess(false);\n    navigate('/');\n  }\n  const addCharacter = newCharacter => {\n    // Verificar si el personaje ya existe en el arreglo characters\n    const isDuplicate = characters.some(character => character.id === newCharacter.id);\n    if (!isDuplicate) {\n      setCharacters([...characters, newCharacter]);\n    }\n  };\n  const onSearch = id => {\n    axios(`http://localhost:3001/rickandmorty/character/${id}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      if (data.name) {\n        addCharacter(data);\n      }\n    }).catch(error => {\n      alert('No hay personajes de este ID', error);\n    });\n  };\n  const onClose = id => {\n    const updatedCharacters = characters.filter(character => character.id !== id);\n    setCharacters(updatedCharacters);\n  };\n  const addRandomCharacter = randomCharacter => {\n    addCharacter(randomCharacter);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showNav && /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch,\n      addRandomCharacter: addRandomCharacter,\n      onLogout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: access ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 44\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onLogin: login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/favorites\",\n        element: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 44\n        }, this),\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:id\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(Error404, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"2pwxqvuQbtRJLD6cT8b2U9PdrcY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","Navigate","Routes","Route","axios","Cards","Nav","About","Detail","Form","Error404","Favorites","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","characters","setCharacters","location","showNav","pathname","navigate","access","setAccess","login","userData","email","password","URL","then","_ref","data","logout","addCharacter","newCharacter","isDuplicate","some","character","id","onSearch","_ref2","name","catch","error","alert","onClose","updatedCharacters","filter","addRandomCharacter","randomCharacter","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","onLogin","_c","$RefreshReg$"],"sources":["D:/Users/Jorhe/Documents/IMPORTANTE/rick_and_morty/client/src/App.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\"\r\nimport { useLocation, useNavigate, Navigate, Routes, Route} from 'react-router-dom';\r\n\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nimport Cards from './components/Cards/Cards.jsx';\r\nimport Nav from './components/Nav/Nav';\r\nimport About from './components/About/About';\r\nimport Detail from './components/Detail/Detail'\r\nimport Form from './components/Form/Form';\r\nimport Error404 from './components/Error404/Error404';\r\nimport Favorites from './components/Favorites/Favorites';\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n   const [characters, setCharacters] = useState([]);  \r\n   const location = useLocation();\r\n   const showNav = location.pathname !== '/';\r\n\r\n   const navigate = useNavigate();\r\n   const [access, setAccess] = useState(false);\r\n\r\n   // function login(userData) {\r\n   //    if (userData.password === PASSWORD && userData.email === EMAIL) {\r\n   //       setAccess(true);\r\n   //       navigate('/home');\r\n   //    }\r\n   // }\r\n\r\n   const login = (userData) => {\r\n      const { email, password } = userData;\r\n      const URL = 'http://localhost:3001/rickandmorty/login/';\r\n      axios(URL + `?email=${email}&password=${password}`).then(({ data }) => {\r\n         const { access } = data;\r\n         setAccess(data);\r\n         access && navigate('/home');\r\n      });\r\n   }\r\n\r\n   function logout() {\r\n      setAccess(false);\r\n      navigate('/');\r\n    }\r\n\r\n   const addCharacter = (newCharacter) => {\r\n      // Verificar si el personaje ya existe en el arreglo characters\r\n      const isDuplicate = characters.some((character) => character.id === newCharacter.id);\r\n      if (!isDuplicate) {\r\n         setCharacters([...characters, newCharacter]);\r\n      }\r\n   }\r\n\r\n   const onSearch = (id) => {\r\n      axios(`http://localhost:3001/rickandmorty/character/${id}`)\r\n         .then(({ data }) => {\r\n         if (data.name) {\r\n            addCharacter(data);\r\n         } \r\n      })\r\n      .catch((error) => {\r\n      alert('No hay personajes de este ID', error);\r\n      });\r\n   };\r\n\r\n   const onClose = (id) => {\r\n      const updatedCharacters = characters.filter((character) => character.id !== id);\r\n      setCharacters(updatedCharacters);\r\n   }\r\n\r\n   const addRandomCharacter = (randomCharacter) => {\r\n      addCharacter(randomCharacter);\r\n    };\r\n\r\n\r\n   return (\r\n      <>\r\n\r\n    {showNav && <Nav onSearch={onSearch} addRandomCharacter={addRandomCharacter} onLogout={logout}/>}\r\n\r\n      <Routes>\r\n\r\n         <Route path=\"/\" element={access ? <Navigate to=\"/home\" /> : <Form onLogin={login} />}/>\r\n         <Route path=\"/home\" element={<Cards characters={characters} onClose={onClose}/>}/> \r\n         <Route path=\"/about\" element={<About/>}/>\r\n         <Route path=\"/favorites\" element={<Favorites/>}  onClose={onClose} />\r\n         <Route path=\"/detail/:id\" element={<Detail />} />\r\n         <Route path=\"*\" element={<Error404/>}/>\r\n         \r\n      </Routes>\r\n      </>\r\n\r\n   );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}